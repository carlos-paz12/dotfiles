{
  "Function main": {
    "prefix": "main",
    "body": [
      "#include <cstdlib>",
      "#include <iostream>",
      "",
      "int main(/* int argc, char *argv[] */) {",
      "  /// @todo",
      "  ${0}",
      "  return EXIT_SUCCESS;",
      "}"
    ],
    "description": "Snippet for a basic main function."
  },
  "For loop (i)": {
    "prefix": "fori",
    "body": [
      "unsigned long long ${2:N} = ${3:0};",
      "for (unsigned long long ${1:i}{0}; ${1:i} < ${2:N}; ++${1:i}) {",
      "  ${0}",
      "}"
    ],
    "description": "Classic for loop with index variable i and unsigned N"
  },
  "Range-based for loop": {
    "prefix": "fore",
    "body": [
      "for (auto& ${1:item} : ${2:container}) {",
      "  ${0}",
      "}"
    ],
    "description": "Range-based for loop"
  },
  "While loop": {
    "prefix": "while",
    "body": [
      "while (${1:condition}) {",
      "  ${0}",
      "}"
    ],
    "description": "While loop"
  },
  "If statement": {
    "prefix": "if",
    "body": [
      "if (${1:condition}) {",
      "  ${0}",
      "}"
    ],
    "description": "If statement"
  },
  "If-else statement": {
    "prefix": "ifelse",
    "body": [
      "if (${1:condition}) {",
      "  ${2}",
      "} else {",
      "  ${0}",
      "}"
    ],
    "description": "If-else statement"
  },
  "Function definition": {
    "prefix": "func",
    "body": [
      "${1:void} ${2:functionName}(${3:args}) {",
      "  ${0}",
      "}"
    ],
    "description": "Function definition"
  },
  "Class definition": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName} {",
      " public:",
      "  ${1:ClassName}();",
      "  ~${1:ClassName}();",
      "",
      " private:",
      "  ${0}",
      "};"
    ],
    "description": "C++ class definition"
  },
  "Struct definition": {
    "prefix": "struct",
    "body": [
      "struct ${1:StructName} {",
      "  ${0}",
      "};"
    ],
    "description": "C++ struct definition"
  },
  "Namespace": {
    "prefix": "ns",
    "body": [
      "namespace ${1:name} {",
      "  ${0}",
      "}  // namespace ${1:name}"
    ],
    "description": "C++ namespace block"
  },
  "Include directive": {
    "prefix": "inc",
    "body": [
      "#include <${1:header}>"
    ],
    "description": "C++ #include directive"
  }
}